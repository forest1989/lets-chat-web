<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.letsmall.dao.MallProductManageDao">
    
	<sql id="mallProductManageColumns">
		a.id AS "id",
		a.product_no AS "productNo",
		a.product_name AS "productName",
		a.product_ico1 AS "productIco1",
		a.product_ico2 AS "productIco2",
		a.product_ico3 AS "productIco3",
		a.product_ico4 AS "productIco4",
		a.product_ico5 AS "productIco5",
		a.product_ico6 AS "productIco6",
		a.product_img1 AS "productImg1",
		a.product_img2 AS "productImg2",
		a.product_img3 AS "productImg3",
		a.product_detail_img AS "productDetailImg",
		a.product_type_id AS "productTypeId",
		a.stock_num AS "stockNum",
		a.stauts AS "stauts",
		a.del_flag AS "delFlag",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.update_by AS "updateBy.id",
		ps.spec_name AS "proSpec.specName",
		ps.spec_price AS "proSpec.specPrice",
		a.remarks AS "remarks"
	</sql>
	
	<select id="getProductNo" resultType="String">
		SELECT MAX(p.PRODUCT_NO) PRODUCT_NO from MALL_PRODUCT_INFO p where p.PRODUCT_TYPE_ID = #{productType} 
	</select>
	
	<sql id="mallProductManageJoins">
		INNER JOIN PRODUCT_SPECIFICATIONS ps on ps.PRODUCT_ID = a.ID 
			AND ps.SORT = 1 
			AND ps.DEL_FLAG = '0' 
	</sql>
    
	<select id="get" resultType="MallProductManage">
		SELECT 
			<include refid="mallProductManageColumns"/>
		FROM mall_product_info a
		<include refid="mallProductManageJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="MallProductManage">
		SELECT 
			<include refid="mallProductManageColumns"/>
		FROM mall_product_info a
		<include refid="mallProductManageJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<if test="productNo != null and productNo != ''">
			AND a.product_no LIKE '%'||#{productNo}||'%'
		</if>
		<if test="productName != null and productName != ''">
			AND a.product_name LIKE '%'||#{productName}||'%'
		</if>
		<if test="productTypeId != null and productTypeId != ''">
			AND a.product_type_id = #{productTypeId}
		</if>
		<if test="stauts != null and stauts != ''">
			AND a.stauts = #{stauts}
		</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="MallProductManage">
		SELECT 
			<include refid="mallProductManageColumns"/>
		FROM mall_product_info a
		<include refid="mallProductManageJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>	
		<if test="productNo != null and productNo != ''">
			AND a.product_no LIKE '%'||#{productNo}||'%'
		</if>
		<if test="productName != null and productName != ''">
			AND a.product_name LIKE '%'||#{productName}||'%'
		</if>
		<if test="productTypeId != null and productTypeId != ''">
			AND a.product_type_id = #{productTypeId}
		</if>
		<if test="stauts != null and stauts != ''">
			AND a.stauts = #{stauts}
		</if>	
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO mall_product_info(
			id,
			product_no,
			product_name,
			product_ico1,
			product_ico2,
			product_ico3,
			product_ico4,
			product_ico5,
			product_ico6,
			product_img1,
			product_img2,
			product_img3,
			product_detail_img,
			product_type_id,
			stock_num,
			stauts,
			del_flag,
			create_by,
			create_date,
			update_date,
			update_by,
			remarks
		) VALUES (
			#{id},
			#{productNo},
			#{productName},
			#{productIco1},
			#{productIco2},
			#{productIco3},
			#{productIco4},
			#{productIco5},
			#{productIco6},
			#{productImg1},
			#{productImg2},
			#{productImg3},
			#{productDetailImg},
			#{productTypeId},
			#{stockNum},
			#{stauts},
			#{delFlag},
			#{createBy.id},
			#{createDate},
			#{updateDate},
			#{updateBy.id},
			#{remarks}
		)
	</insert>
	
	<insert id="insertProductSpec">
		INSERT INTO PRODUCT_SPECIFICATIONS(
		ID, 
		PRODUCT_ID, 
		SPEC_NAME, 
		SPEC_PRICE,
		SORT,
		STOCK_NUM,
		DEL_FLAG) 
		VALUES 
		(#{id}, 
		#{productId}, 
		#{specName}, 
		#{specPrice},
		#{sort},
		#{stockNum},
		#{delFlag})
	</insert>
	
	<update id="deleteProductSpec">
		DELETE FROM PRODUCT_SPECIFICATIONS WHERE PRODUCT_ID = #{productId}
	</update>
	
	<update id="updatePsDelFlag">
		UPDATE PRODUCT_SPECIFICATIONS SET del_flag = 1 WHERE PRODUCT_ID = #{productId}
	</update>
	
	<select id="getProductSpecList" resultType="ProductSpecifications">
		SELECT ID, 
			 SPEC_NAME, 
			 SPEC_PRICE, 
			 STOCK_NUM 	
			FROM PRODUCT_SPECIFICATIONS 
				WHERE PRODUCT_ID = #{productId} 
				AND DEL_FLAG = #{DEL_FLAG_NORMAL} 
			ORDER BY SORT
	</select>
	<update id="update">
		UPDATE mall_product_info SET 
			<if test="productNo != null and productNo != ''">
				product_no = #{productNo},
			</if>
			product_name = #{productName},
			product_ico1 = #{productIco1},
			product_ico2 = #{productIco2},
			product_ico3 = #{productIco3},
			product_ico4 = #{productIco4},
			product_ico5 = #{productIco5},
			product_ico6 = #{productIco6},
			product_img1 = #{productImg1},
			product_img2 = #{productImg2},
			product_img3 = #{productImg3},
			product_detail_img = #{productDetailImg},
			product_type_id = #{productTypeId},
			stock_num = #{stockNum},
			stauts = #{stauts},
			update_date = #{updateDate},
			update_by = #{updateBy.id},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE mall_product_info SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<update id="batchUpdateStatus">
		UPDATE MALL_PRODUCT_INFO SET stauts = #{stauts}
		WHERE id IN 
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
             #{item}
         </foreach>
	</update>
	<insert id="batchSaveHot">
		INSERT INTO hot_product(
			id,
			product_id,
			start_time,
			edn_time,
			sort,
			create_by,
			create_date,
			update_date,
			update_by,
			del_flag
		) VALUES (
			SEQ_APP_USER.NEXTVAL,
			#{productId},
			sysdate,
			sysdate,
			SEQ_APP_USER.NEXTVAL,
			0,
			sysdate,
			sysdate,
			0,
			0
		)
	</insert>
	<update id="deleteHotbyId">
		DELETE FROM HOT_PRODUCT h WHERE h.product_id IN 
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
             #{item}
         </foreach>
	</update>
</mapper>