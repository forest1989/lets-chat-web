<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.letsmall.dao.MallOrderInfoDao">
    
	<sql id="mallOrderColumns">
		a.id AS "id",
		a.order_no AS "orderNo",
		a.user_id AS "user.id",
		a.order_status AS "orderStatus",
		a.product_amount_total AS "productAmountTotal",
		a.order_amount_total AS "orderAmountTotal",
		a.logistics_fee AS "logisticsFee",
		a.address_id AS "addressId",
		a.logistics_company_name AS "logisticsCompanyName",
		a.orderlogistics_id AS "orderlogisticsId",
		a.pay_channel AS "payChannel",
		a.pay_time AS "payTime",
		a.escrow_trade_no AS "escrowTradeNo",
		a.create_date AS "createDate",
		a.remarks AS "remarks",
		a.consign AS "consign",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		u3.nick_name AS "user.nickName",
		u3.login_name AS "user.loginName"
	</sql>
	
	<sql id="mallOrderJoins">
		INNER JOIN APP_USER u3 ON u3.id = a.user_id AND u3.del_flag = '0'
	</sql>
    
	<select id="get" resultType="MallOrderManage">
		SELECT 
			<include refid="mallOrderColumns"/>
		FROM mall_order a
		<include refid="mallOrderJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="MallOrderManage">
		SELECT 
			<include refid="mallOrderColumns"/>
		FROM mall_order a
		<include refid="mallOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<if test="orderNo != null and orderNo != ''">
			AND a.order_no LIKE '%'||#{orderNo}||'%'
		</if>
		<if test="orderStatus != null and orderStatus != ''">
			AND a.order_status = #{orderStatus}
		</if>
		<choose>
			<when test="startDate != null and endDate != null">
				AND a.CREATE_DATE between #{startDate} and #{endDate}
			</when>
			<otherwise>
				<if test="startDate != null">
					AND #{startDate} <![CDATA[ <= ]]> a.CREATE_DATE
				</if>
				<if test="endDate != null">
					AND #{endDate} <![CDATA[ >= ]]> a.CREATE_DATE
				</if>
			</otherwise>
		</choose>
		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.CREATE_DATE DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="MallOrderManage">
		SELECT 
			<include refid="mallOrderColumns"/>
		FROM mall_order a
		<include refid="mallOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<if test="orderNo != null and orderNo != ''">
			AND a.order_no LIKE '%'||#{orderNo}||'%'
		</if>
		<if test="orderStatus != null and orderStatus != ''">
			AND a.order_status = #{orderStatus}
		</if>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.CREATE_DATE DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO mall_order(
			id,
			order_no,
			user_id,
			order_status,
			product_amount_total,
			order_amount_total,
			logistics_fee,
			address_id,
			logistics_company_name,
			orderlogistics_id,
			pay_channel,
			pay_time,
			escrow_trade_no,
			create_date,
			remarks,
			consign,
			columns1,
			columns2,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{orderNo},
			#{user.id},
			#{orderStatus},
			#{productAmountTotal},
			#{orderAmountTotal},
			#{logisticsFee},
			#{addressId},
			#{logisticsCompanyName},
			#{orderlogisticsId},
			#{payChannel},
			#{payTime},
			#{escrowTradeNo},
			#{createDate},
			#{remarks},
			#{consign},
			#{columns1},
			#{columns2},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE mall_order SET 	
			order_no = #{orderNo},
			user_id = #{user.id},
			order_status = #{orderStatus},
			product_amount_total = #{productAmountTotal},
			order_amount_total = #{orderAmountTotal},
			logistics_fee = #{logisticsFee},
			address_id = #{addressId},
			logistics_company_name = #{logisticsCompanyName},
			orderlogistics_id = #{orderlogisticsId},
			pay_channel = #{payChannel},
			pay_time = #{payTime},
			escrow_trade_no = #{escrowTradeNo},
			remarks = #{remarks},
			consign = #{consign},
			columns1 = #{columns1},
			columns2 = #{columns2},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE mall_order SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<select id="getShopAddress" resultType="MallShoppingAddress">
		SELECT
			a.shop_user_name,
			a.phone,
			a.arear,
			a.address_detail
			FROM shopping_address a
		WHERE a.id = #{id}
	</select>
	
	<select id="getOrderProductList" resultType="java.util.HashMap">
		SELECT
			oi.PRODUCT_COUNT,
			pi.PRODUCT_NAME,
			pi.PRODUCT_ICO1,
			oi.SPEC_NAME,
			oi.PRODUCT_ID,
			oi.PRODUCT_PRICE,
			pi.DEL_FLAG
		from 
			MALL_ORDER_INFO oi  
			left join MALL_PRODUCT_INFO pi on pi.id = oi.PRODUCT_ID
		where oi.ORDER_ID = #{orderId}
	</select>
	
	<!-- 更新订单状态 -->
	<update id="updateOrderStatus">
		UPDATE mall_order SET 	
			order_status = #{orderStatus},
			update_date = #{updateDate}
		WHERE id = #{id}	
	</update>
	
	<!-- 更新发货信息 -->
	<update id="updateSendGoodsInfo">
		UPDATE mall_order SET 
			logistics_company_name = #{logisticsCompanyName},
			orderlogistics_id = #{orderlogisticsId},	
			order_status = #{orderStatus},
			update_date = #{updateDate}
		WHERE id = #{id}	
	</update>
	
	<!-- 获取需要取消订单的订单ID集合 -->
	<select id="getCancelOrderIds" resultType="String">
		SELECT id from (SELECT 
			ceil((SYSDATE - (CREATE_DATE + 0)) * 24 ) as cellTime, id
		FROM MALL_ORDER 
		WHERE ORDER_STATUS = '01' 
		AND DEL_FLAG = '0')
		where cellTime > 24
	</select>
	
	<!-- 根据订单ID获取订单商品详情 -->
	<select id="getOrderInfoByIds" resultType="java.util.HashMap">
		SELECT 
			PRODUCT_SPEC_ID, 
			PRODUCT_COUNT 
			FROM MALL_ORDER_INFO oi WHERE oi.ORDER_ID IN 
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
	</select>
	
	<!-- 根据订单ID更改订单状态 -->
	<update id="orderCancelTask">	
		UPDATE mall_order set ORDER_STATUS = '09' where id in 
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
	</update>
	
	<update id="updateProNum">
		UPDATE PRODUCT_SPECIFICATIONS 
		SET STOCK_NUM = (#{stockNum} + STOCK_NUM) 
		WHERE id = #{id}
	</update>
	
	
</mapper>