<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.letsapi.dao.MomentsInfoDao">
    
	<sql id="momentsInfoColumns">
		a.id AS "id",
		a.user_name AS "userName",
		a.text_contents AS "textContents",
		a.img_contents AS "imgContents",
		a.send_address AS "sendAddress",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="momentsInfoJoins">
	</sql>
    
	<select id="get" resultType="MomentsInfo">
		SELECT 
			<include refid="momentsInfoColumns"/>
		FROM moments_info a
		<include refid="momentsInfoJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="MomentsInfo">
		SELECT 
			<include refid="momentsInfoColumns"/>
		FROM moments_info a
		<include refid="momentsInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="MomentsInfo">
		SELECT 
			<include refid="momentsInfoColumns"/>
		FROM moments_info a
		<include refid="momentsInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO moments_info(
			id,
			user_name,
			text_contents,
			img_contents,
			send_address,
			create_date,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{userName},
			#{textContents},
			#{imgContents},
			#{sendAddress},
			#{createDateMoments},
			#{updateDateMoments},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE moments_info SET 	
			user_name = #{userName},
			text_contents = #{textContents},
			img_contents = #{imgContents},
			send_address = #{sendAddress},
			update_date = #{updateDate},
			del_flag = #{delFlag}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE moments_info SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<!-- 朋友圈查询 之：只给状态0 查询最新十条朋友圈，刚进来朋友圈 -->
	<select id="findMoments0" resultType="MomentsInfo">
		SELECT *
		   FROM (SELECT A.ID MOENTID,
		                A.CREATE_DATE createDateMoments,
		                A.USER_NAME,
		                A.TEXT_CONTENTS,
		                A.IMG_CONTENTS,
		                A.REMARKS_NICK_NAME,
		                A.REMARKS_PHOTO,
		                A.NICK_NAME,
		                A.Photo
		           FROM (SELECT MI.*,
		                        AFO.REMARKS_NICK_NAME,
		                        AFO.REMARKS_PHOTO,
		                        AU.NICK_NAME,
		                        AU.Photo
		                   FROM MOMENTS_INFO MI
		                   LEFT JOIN APP_FRIEND_INFO AFO ON lower(MI.USER_NAME) = lower(AFO.FRIEND_LOGIN_NAME) AND lower(AFO.LOGIN_NAME) = lower(#{userName})  
		                   LEFT JOIN APP_USER AU ON lower(MI.USER_NAME) = lower(AU.LOGIN_NAME) 
		                              ORDER BY MI.Create_Date DESC) A
		          WHERE ROWNUM <![CDATA[<=]]> 10
		            AND lower(A.USER_NAME) IN
		                (SELECT SUBSTR(O.JID, 1, INSTR(O.JID, '@', -1) - 1)
		                   FROM OFROSTER O
		                  WHERE lower(O.USERNAME) = lower(#{userName})
		                    AND O.SUB = '3')
		             OR ROWNUM <![CDATA[<=]]>10
		            AND lower(A.USER_NAME) = lower(#{userName}))
		  WHERE ROWNUM <![CDATA[>=]]> 0
		  ORDER BY createDateMoments DESC
	</select>
	<!-- 朋友圈查询 之：有时间&有查询状态1 下拉获取时间轴往上所有 -->
	<select id="findMoments1" resultType="MomentsInfo">
		 SELECT *
			  FROM (SELECT A.ID MOENTID,
			               A.CREATE_DATE createDateMoments,
			               A.USER_NAME,
			               A.TEXT_CONTENTS,
			               A.IMG_CONTENTS,
			               A.REMARKS_NICK_NAME,
			               A.REMARKS_PHOTO,
			               A.NICK_NAME,
			               A.PHOTO
			          FROM (SELECT MI.*,
			                       AFO.REMARKS_NICK_NAME,
			                       AFO.REMARKS_PHOTO,
			                       AU.NICK_NAME,
			                       AU.PHOTO
			                  FROM MOMENTS_INFO MI
			                  LEFT JOIN APP_FRIEND_INFO AFO ON lower(MI.USER_NAME) = lower(AFO.FRIEND_LOGIN_NAME) AND lower(AFO.LOGIN_NAME) = lower(#{userName})
			                  LEFT JOIN APP_USER AU ON lower(MI.USER_NAME) = lower(AU.LOGIN_NAME)
			                 ORDER BY MI.CREATE_DATE DESC) A
			         WHERE lower(A.USER_NAME) IN
			               (SELECT SUBSTR(O.JID, 1, INSTR(O.JID, '@', -1) - 1)
			                  FROM OFROSTER O
			                 WHERE lower(O.USERNAME) = lower(#{userName})
			                   AND O.SUB = '3')
			           AND A.CREATE_DATE <![CDATA[>]]>
			           		to_timestamp(#{timeBase}, 'yyyy-MM-dd HH24:MI:ssff')
			            OR lower(A.USER_NAME) = lower(#{userName})
			           AND A.CREATE_DATE <![CDATA[>]]>
			               to_timestamp(#{timeBase}, 'yyyy-MM-dd HH24:MI:ssff'))
			 ORDER BY createDateMoments DESC
	</select>
	<!-- 朋友圈查询 之：有时间&有查询状态2上滑 查询下一页 -->
	<select id="findMoments2" resultType="MomentsInfo">
		 SELECT *
			  FROM (SELECT A.ID MOENTID,
			               A.CREATE_DATE createDateMoments,
			               A.USER_NAME,
			               A.TEXT_CONTENTS,
			               A.IMG_CONTENTS,
			               A.REMARKS_NICK_NAME,
			               A.REMARKS_PHOTO,
			               A.NICK_NAME,
			               A.PHOTO
			          FROM (SELECT MI.*,
			                       AFO.REMARKS_NICK_NAME,
			                       AFO.REMARKS_PHOTO,
			                       AU.NICK_NAME,
			                       AU.PHOTO
			                  FROM MOMENTS_INFO MI
			                  LEFT JOIN APP_FRIEND_INFO AFO ON lower(MI.USER_NAME) = lower(AFO.FRIEND_LOGIN_NAME) AND lower(AFO.LOGIN_NAME) = lower(#{userName})
			                  LEFT JOIN APP_USER AU ON lower(MI.USER_NAME) = lower(AU.LOGIN_NAME)
			                 ORDER BY MI.CREATE_DATE DESC) A
			         WHERE ROWNUM <![CDATA[<=]]> 10
			           AND lower(A.USER_NAME) IN
			               (SELECT SUBSTR(O.JID, 1, INSTR(O.JID, '@', -1) - 1)
			                  FROM OFROSTER O
			                 WHERE lower(O.USERNAME) = lower(#{userName}) AND O.SUB = '3')
			           AND A.CREATE_DATE <![CDATA[<]]>
			           		to_timestamp(#{timeBase}, 'yyyy-MM-dd HH24:MI:ssff')
			            OR ROWNUM <![CDATA[<=]]> 10
			           AND lower(A.USER_NAME) = lower(#{userName})
			           AND A.CREATE_DATE <![CDATA[<]]>
			               to_timestamp(#{timeBase}, 'yyyy-MM-dd HH24:MI:ssff'))
			 WHERE ROWNUM <![CDATA[>=]]> 0
			 ORDER BY createDateMoments  DESC
	</select>
	
	<!-- 朋友圈查询 之：我的相册 -->
	<select id="findMyMoments" resultType="MomentsInfo">
			 SELECT B.ID MOENTID,
			       B.USER_NAME,
			       B.TEXT_CONTENTS,
			       B.IMG_CONTENTS,
			       B.CREATE_DATE CREATEDATEMOMENTS
			  FROM (SELECT A.*, ROWNUM RN
			          FROM (SELECT *
			                  FROM MOMENTS_INFO MI
			                 WHERE lower(MI.USER_NAME) = lower(#{userName}) 
			                 ORDER BY MI.CREATE_DATE DESC) A
			         WHERE ROWNUM <![CDATA[<=]]> ((TO_number(#{pageNo}))+1) * 10) B
			 WHERE RN <![CDATA[>]]> TO_number(#{pageNo}) * 10
			 ORDER BY CREATEDATEMOMENTS DESC
	</select>
</mapper>