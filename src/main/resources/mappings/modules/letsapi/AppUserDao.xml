<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.letsapi.dao.AppUserDao">
    
	<sql id="appUserColumns">
		a.id AS "id",
		a.login_name AS "loginName",
		a.password AS "password",
		a.photo AS "photo",
		a.name AS "name",
		a.nick_name AS "nickName",
		a.sex AS "sex",
		a.phone AS "phone",
		a.email AS "email",
		a.area_id AS "area.id",
		a.del_flag AS "delFlag",
		a.login_flag AS "loginFlag",
		a.update_date AS "updateDate",
		a.create_date AS "createDate",
		a.remarks AS "remarks",
		a10.name AS "area.name"
	</sql>
	
	<sql id="appUserJoins">
		LEFT JOIN sys_area a10 ON a10.id = a.area_id
	</sql>
    
	<select id="get" resultType="AppUser">
		SELECT 
			<include refid="appUserColumns"/>
		FROM app_user a
		<include refid="appUserJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AppUser">
		SELECT 
			<include refid="appUserColumns"/>
		FROM app_user a
		<include refid="appUserJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AppUser">
		SELECT 
			<include refid="appUserColumns"/>
		FROM app_user a
		<include refid="appUserJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO app_user(
			id,
			login_name,
			password,
			photo,
			name,
			nick_name,
			sex,
			phone,
			email,
			area_id,
			del_flag,
			login_flag,
			update_date,
			create_date,
			remarks
		) VALUES (
			#{id},
			#{loginName},
			#{password},
			#{photo},
			#{name},
			#{nickName},
			#{sex},
			#{phone},
			#{email},
			#{area.id},
			#{delFlag},
			#{loginFlag},
			#{updateDate},
			#{createDate},
			#{remarks}
		)
	</insert>
	
	<update id="update">
		UPDATE app_user SET 	
			login_name = #{loginName},
			password = #{password},
			photo = #{photo},
			name = #{name},
			nick_name = #{nickName},
			sex = #{sex},
			phone = #{phone},
			email = #{email},
			area_id = #{area.id},
			login_flag = #{loginFlag},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE app_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 登录和判断 用户是否存在-->
	<select id="getByLoginNameRegist" resultType="AppUser" >
    <!-- select * from app_user where login_name = #{loginName} and del_flag = 0 -->
    select * from app_user where lower(login_name) = lower(#{loginName}) and del_flag = 0
    </select>
    <!-- 登录和判断 用户是否存在  -->
	<select id="getByLoginName" resultType="AppUser" >
    <!-- select * from app_user where login_name = #{loginName} and del_flag = 0 -->
    select * from app_user where login_name = #{loginName} and del_flag = 0
    </select>
	
	<update id="updateByloginName" parameterType="AppUser">
    update APP_USER
    <set>
      <if test="password != null and password != ''">
        password = #{password},
      </if>
      <if test="photo != null and photo != ''">
        photo = #{photo},
      </if>
      <if test="name != null and name != ''">
        name = #{name},
      </if>
      <if test="nickName != null and nickName != ''">
        nick_name = #{nickName},
      </if>
      <if test="sex != null and sex != ''">
        sex = #{sex},
      </if>
      <if test="phone != null and phone != ''">
        phone = #{phone},
      </if>
      <if test="email != null and email != ''">
        email = #{email},
      </if>
      <if test="loginFlag != null and loginFlag != ''">
        login_flag = #{loginFlag},
      </if>
      <if test="updateDate != null and updateDate != ''">
        update_date = #{updateDate},
      </if>
      <if test="remarks != null and remarks != ''">
        remarks = #{remarks},
      </if>
    </set>
    where id = #{id} and del_flag = 0
  </update>
  
    <!-- app用户注册  -->
	<insert id="register" parameterType="map">
		insert into APP_USER(id,login_name,password,photo,name,nick_name,sex,phone,email,area_id,del_flag,login_flag,update_date,create_date,remarks) 
		values(
		#{id}, #{loginName}, #{password},'','',#{loginName},'','','','','0','1',sysdate,sysdate,'')
	</insert>
	<!-- app用户注册链接openfire注册失败删除该用户  -->
	<update id="deleteReg">
		UPDATE app_user SET 
			del_flag = 1
		WHERE login_name = #{loginName} and del_flag = 0
	</update>
	<!-- app查询序列SEQ_APP_USER  -->
	<select id="getid"  resultType="java.lang.String">
		select SEQ_APP_USER.nextval id from dual
	</select>
	
	 <!-- app注册用户信息完善  -->
	<update id="perfect">
		update APP_USER 
		<set>
    	<if test="photo != null and photo != ''">
	      PHOTO = #{photo},
	    </if>
	    <if test="phone != null and phone != ''">
	      PHONE =#{phone},
	    </if>
	    <if test="nickName != null and nickName != ''">
	      NICK_NAME =#{nickName},
	    </if>
	    <if test="areaId != null and areaId != ''">
	      area_id = #{areaId},
	    </if> 
    </set> 
     where id = #{id} and del_flag = 0
	</update>
	
	<!-- app获取用户好友列表信息  -->
	<select id="selectFriend"  resultType="FriendInfo">
		   SELECT O1.REMARKS_NICK_NAME,
           O1.REMARKS_PHONE,
           O1.REMARKS_PHOTO,
           O2.PHOTO,
           O2.LOGIN_NAME,
           O2.NICK_NAME,
		       O2.SEX,
		       O2.PHONE
		  FROM OFROSTER O
		  LEFT JOIN APP_FRIEND_INFO O1 ON  substr(O.jid,1,instr(O.jid,'@',-1)-1) = lower(O1.FRIEND_LOGIN_NAME)
		                              AND lower(O1.LOGIN_NAME) = lower(O.USERNAME)
		  JOIN APP_USER O2 ON lower(O2.LOGIN_NAME) = substr(O.jid,1,instr(O.jid,'@',-1)-1)
		 WHERE lower(O.USERNAME) = lower(#{loginName})
		   AND O.SUB = '3'
	</select>
	<!-- app个性化定制好友信息  -->
	<insert id="customizationFriend" parameterType="FriendInfo">
		INSERT INTO APP_FRIEND_INFO
		  (LOGIN_NAME,
		   REMARKS_NICK_NAME,
		   REMARKS_PHONE,
		   REMARKS_PHOTO,
		   FRIEND_LOGIN_NAME)
		VALUES
		  (#{loginName}, #{remarksNickName}, #{remarksPhone}, #{remarksPhoto}, #{friendLoginName})
	</insert>
	
		 <!-- app个性化定制好友信息修改个性化定制信息  -->
	<update id="updatecust" parameterType="FriendInfo">
		update APP_FRIEND_INFO 
		<set>
    	<if test="remarksNickName != null and remarksNickName != ''" >
	      REMARKS_NICK_NAME = #{remarksNickName},
	    </if>
	    <if test="remarksPhone != null and remarksPhone != ''">
	      REMARKS_PHONE =#{remarksPhone},
	    </if>
	    <if test="remarksPhoto != null and remarksPhoto != ''">
	      REMARKS_PHOTO =#{remarksPhoto},
	    </if>
    </set> 
     where lower(LOGIN_NAME) = lower(#{loginName}) and lower(FRIEND_LOGIN_NAME) = lower(#{friendLoginName})
	</update>
	<!-- app查询好友定制信息 用于判断是新增个性化定制信息 还是 修改个性化定制信息  -->
	<select id="selectcust"  resultType="FriendInfo">
		  SELECT friend_login_name from APP_FRIEND_INFO WHERE lower(login_name) = lower(#{loginName}) AND lower(friend_login_name) = lower(#{friendLoginName})
	</select>
	<!-- app查询好友定制信息 用于判断是新增个性化定制信息 还是 修改个性化定制信息  -->
	<select id="getuser"  resultType="String">
		  SELECT login_name from APP_USER WHERE id = #{userid}
	</select>
	<!-- 获取好友信息，可单个查 也可多个查 -->
	<select id="selectFriendInfos" resultType="FriendInfo" >		   		   
		     SELECT A.LOGIN_NAME,
	           A.PHOTO,
	           A.NAME,
	           A.NICK_NAME,
	           A.SEX,
	           A.PHONE,
	           A.AREA_ID,
	           B.REMARKS_NICK_NAME,
	           B.REMARKS_PHONE,
	           B.REMARKS_PHOTO
	        FROM APP_USER A left join APP_FRIEND_INFO B 
	         on lower(A.LOGIN_NAME) = lower(b.friend_login_name) and lower(b.login_name) = lower(#{loginName}) 
	       WHERE lower(A.LOGIN_NAME)  = lower(#{friendLoginName})  
	</select>
	<!-- app注册完成 初始化用户购物币账户  -->
	<insert id="shopAccount" parameterType="AppUser">
		INSERT INTO APP_USER_MONEY
		  (ID,
		   USER_ID,
		   MONEY_TOTAL,
		   STAUTS,
		   UPDATE_DATE,
		   UPDATE_BY,
		   CREATE_DATE,
		   CREATE_BY,
		   DEL_FLAG)
		VALUES
		  (#{shopAccountId},
		   #{id},
		   0,
		   '0',
		   SYSDATE,
		   'admin',
		   SYSDATE,
		   'admin',
		   '0')
	</insert>
	
	<insert id="insertUserLoginLog" parameterType="AppUserLoginLog">
		INSERT INTO APP_USER_LOGIN_LOG 
			(ID, LOGIN_NAME, IMEI, DEVICE_TYPE, CREATE_DATE) 
			VALUES 
			(#{id}, #{loginName}, #{imei}, #{deviceType}, #{createDate})
	</insert>
	
	<select id="getUserLoginLog" resultType="AppUserLoginLog">
		SELECT * FROM 
			APP_USER_LOGIN_LOG 
			WHERE lower(LOGIN_NAME) = #{loginName} 
			AND ROWNUM = 1 
			ORDER BY CREATE_DATE DESC
	</select>
</mapper>