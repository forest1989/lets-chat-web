<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.letsapi.dao.MallOrderDao">
    
    
    <sql id="orderList">
		a.id AS "id",
		a.ORDER_NO AS "orderNo",
		a.ORDER_STATUS AS "orderStatus",
		a.ORDER_AMOUNT_TOTAL AS "orderAmountTotal",
		a.LOGISTICS_COMPANY_NAME AS logisticsCompanyName,
		a.ORDERLOGISTICS_ID AS orderlogisticsId,
		A.PRODUCT_AMOUNT_TOTAL AS "productAmountTotal",
		b.SHOP_USER_NAME AS "shopUserName",
		b.PHONE AS "phone",
		b.AREAR AS "arear",
		b.ADDRESS_DETAIL AS "addressDetail"
	</sql>
    <!-- 新增订单 mall_rder -->
	<!-- <insert id="insertOrder">
		INSERT INTO MALL_ORDER
       (ID,
        ORDER_NO,
        USER_ID,
        ORDER_STATUS,
        PRODUCT_AMOUNT_TOTAL,
        ORDER_AMOUNT_TOTAL,
        LOGISTICS_FEE,
        ADDRESS_ID,
        LOGISTICS_COMPANY_NAME,
        ORDERLOGISTICS_ID,
        PAY_CHANNEL,
        PAY_TIME,
        ESCROW_TRADE_NO,
        CREATE_DATE,
        REMARKS,
        CONSIGN,
        COLUMNS1,
        COLUMNS2,
        UPDATE_DATE,
        DEL_FLAG)
     VALUES
       (#{id},
        #{orderNo},
        #{userId},
        #{orderStatus},
        #{productAmountTotal},
        #{orderAmountTotal},
        '',
        #{addressId},
        '',
        '',
        #{payChannel},
        '',
        '',
        sysdate,
        #{remarks},
        '',
        '',
        '',
        sysdate,
        '0')
	</insert> -->
	<!-- 新增订单 mall_rder 改 -->
	<insert id="insertOrder" parameterType="java.util.List" useGeneratedKeys="false">
	 	INSERT INTO MALL_ORDER
       (ID,
        ORDER_NO,
        USER_ID,
        ORDER_STATUS,
        PRODUCT_AMOUNT_TOTAL,
        ORDER_AMOUNT_TOTAL,
        LOGISTICS_FEE,
        ADDRESS_ID,
        LOGISTICS_COMPANY_NAME,
        ORDERLOGISTICS_ID,
        PAY_CHANNEL,
        PAY_TIME,
        ESCROW_TRADE_NO,
        CREATE_DATE,
        REMARKS,
        CONSIGN,
        COLUMNS1,
        COLUMNS2,
        UPDATE_DATE,
        DEL_FLAG) 
	  	<foreach collection="list" item="item" index="index" separator="union all">
	   select #{item.id} id,
	   #{item.orderNo} ORDER_NO,
	   #{item.userId} USER_ID,
	   #{item.orderStatus} ORDER_STATUS,
	   #{item.productAmountTotal} PRODUCT_AMOUNT_TOTAL,
	   #{item.orderAmountTotal} ORDER_AMOUNT_TOTAL,
	   '',
	   #{item.addressId} ADDRESS_ID,
	   '',
	   '',
	   #{item.payChannel} PAY_CHANNEL,
	   '',
	   '',
	   sysdate,
	   #{item.remarks} REMARKS,
	   '',
	   '',
	   '',
	   sysdate,
	   '0' 
                from dual
 		 </foreach>
	</insert>
	<!-- 插入订单商品详情 -->
	<insert id="insertOrderInfo" parameterType="java.util.List" useGeneratedKeys="false">
	 	insert into MALL_ORDER_INFO(id,order_id,product_id,product_count,del_flag,product_spec_id,SPEC_NAME,PRODUCT_PRICE) 
	  	<foreach collection="list" item="item" index="index" separator="union all">
	   <!-- (#{item.id,jdbcType=VARCHAR},#{item.orderId,jdbcType=VARCHAR},#{item.productId,jdbcType=VARCHAR},
	   #{item.productCount,jdbcType=VARCHAR},'0',#{item.productSpecId,jdbcType=VARCHAR}) -->
	   
	   select #{item.mallInfoId} id,
	   #{item.id} order_id,
	   #{item.productId} product_id,
	   #{item.productCount} product_count,
	   '0',
	   #{item.productSpecId} product_spec_id,
	   #{item.specName} SPEC_NAME,
	   #{item.productPrice} PRODUCT_PRICE 
                from dual
 		 </foreach>
	</insert>
	<!-- 查询订单信息 -->
	<select id="getOrderList" resultType="MallOrderInfo">
		SELECT C.PRODUCT_COUNT,
               D.PRODUCT_ICO1,
               D.PRODUCT_NAME,
               C.SPEC_NAME,
               C.Product_Price    
          FROM MALL_ORDER_INFO        C,
               MALL_PRODUCT_INFO      D 
         WHERE C.PRODUCT_ID = D.ID 
         	AND  D.DEL_FLAG = '0' 
           AND C.ORDER_ID = #{ID} 
	</select>
	
	<!-- 一对多查询关联  -->
     <resultMap type="MallOrder" id="slist" >
         <!-- 实体类属性对应数据库的主键字段，不然主键会查不到 -->
         <id property="id" column="id"/>
         <!-- 用collection标签 ,也是实体类属性要对应数据库字段-->
         <collection property="mallOrderInfo" column="id" select="getOrderList" >
         </collection>    
     </resultMap>
     
     <!-- 全表查询 -->
     <select id="selectOrder" resultMap="slist">
    		 select 
	     <include refid = "orderList" />
	         from MALL_ORDER a,SHOPPING_ADDRESS b WHERE a.USER_ID = #{userId}  AND  a.address_id = b.id AND a.del_flag = '0'
	  </select>
	  
	  <!-- 批量删除订单 MALL_ORDER -->
	  <delete id="deleteOrder" parameterType="java.util.List">
		  delete from MALL_ORDER
		  <where>
		  <foreach collection="list" index="index" item="item" open="(" separator="or" close=")">     
		  id=#{item.orderId}
		    </foreach>
		  </where>
		</delete>
		 <!-- 批量删除订单 MALL_ORDER_INFO -->
	  <delete id="deleteOrderInfo" parameterType="java.util.List">
		  delete from MALL_ORDER_INFO
		  <where>
		  <foreach collection="list" index="index" item="item" open="(" separator="or" close=")">     
		  order_id=#{item.orderId}
		    </foreach>
		  </where>
	  </delete>
	  <!-- 修改库存数量 -->
	  <update id="updateStock">
		 UPDATE product_specifications a SET a.stock_num = a.stock_num-To_number(#{productCount}) where id = #{productSpecId}
	</update>
	
	 <!-- 订单 支付之后 修改订单状态为 已支付 -->
	  <!-- <update id="updateOrder">
		UPDATE MALL_ORDER a SET a.order_status = '2' WHERE a.id = #{orderId}
	</update> -->
	 <!-- 订单 支付之后 修改订单状态为 已支付 -->
	 <!--  <update id="updateOrder"  parameterType="java.util.List">  
	    <foreach collection="list" item="item" index="index" separator=";">
	        update MALL_ORDER 
	        <set>
	            order_status='02' 
	        </set>
	        where id = #{item.orderId}
	    </foreach>      
	</update> -->
	
	<update id="updateOrder"  parameterType="java.util.List">
	        update MALL_ORDER t
	        set 
	        t.order_status= '02'  where t.id in 
	        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					  #{item.orderId} 
				</foreach>
	</update>
	
	<!-- 订单 支付完成 修改用户购物币 -->
	  <update id="downMoney">
		  UPDATE app_user_money a SET a.money_total = a.money_total - To_number(#{orderAmountTotal}) where a.user_id = #{userId}
	</update>
	<!-- 订单 获取用户购物币余额 -->
	 <select id="getUserMoney" resultType="MallOrder">
    	select a.money_total as balance from app_user_money a WHERE a.USER_ID = #{userId}
	  </select>
	  <!-- 订单 获取获取订单金额  根据 订单id -->
	<!--  <select id="getAmountTotal" resultType="MallOrder">
    	SELECT a.order_amount_total from MALL_ORDER a WHERE a.id = #{orderId}
	  </select> -->
	  
	  <!-- 订单 获取获取订单金额  根据 订单id -->
	  <select id="getAmountTotal" parameterType="java.util.List" resultType="MallOrder">
			SELECT order_amount_total from MALL_ORDER where id in 
			<!-- 传递List，List中是pojo -->
			<if test="list!=null">
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					  #{item.orderId} 
				</foreach>
			</if>
	</select>
	<!-- 客户确认收货  已完成  修改订单状态为已完成>>>10 -->
	  <update id="updateOver"  parameterType="java.util.List">
	        update MALL_ORDER t
	        set 
	        t.order_status= '10'  where t.id in 
	        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					  #{item.orderId} 
				</foreach>
	</update>
	<!--  查询订单删除状态。支付前判断是否已经删除 -->
	<select id="getDelFlag" parameterType="java.util.List" resultType="MallOrder">
			SELECT DEL_FLAG from MALL_ORDER where id in 
			<!-- 传递List，List中是pojo -->
			<if test="list!=null">
				<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
					  #{item.orderId} 
				</foreach>
			</if>
			 AND DEL_FLAG = '1'
	</select>
</mapper>